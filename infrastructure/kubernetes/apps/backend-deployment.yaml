apiVersion: apps/v1
kind: Deployment
metadata:
  name: nexus-backend
  namespace: nexus-ENVIRONMENT
  labels:
    app: nexus-ai-defi
    component: backend
    environment: ENVIRONMENT
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: nexus-ai-defi
      component: backend
  template:
    metadata:
      labels:
        app: nexus-ai-defi
        component: backend
        environment: ENVIRONMENT
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: nexus-backend-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: nexus-backend
        image: ghcr.io/nexus-ai-defi/nexus-backend:IMAGE_TAG
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: nexus-config
              key: NODE_ENV
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: nexus-config
              key: LOG_LEVEL
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: nexus-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: nexus-secrets
              key: REDIS_URL
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: nexus-secrets
              key: JWT_SECRET
        - name: CLAUDE_API_KEY
          valueFrom:
            secretKeyRef:
              name: nexus-secrets
              key: CLAUDE_API_KEY
        - name: SEI_RPC_URL
          valueFrom:
            configMapKeyRef:
              name: nexus-config
              key: SEI_RPC_URL
        - name: SEI_CHAIN_ID
          valueFrom:
            configMapKeyRef:
              name: nexus-config
              key: SEI_CHAIN_ID
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 30
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: app-logs
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - backend
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "spot-instance"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: nexus-backend
  namespace: nexus-ENVIRONMENT
  labels:
    app: nexus-ai-defi
    component: backend
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app: nexus-ai-defi
    component: backend
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nexus-backend-sa
  namespace: nexus-ENVIRONMENT
  labels:
    app: nexus-ai-defi
    component: backend
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nexus-backend-role
  namespace: nexus-ENVIRONMENT
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nexus-backend-rolebinding
  namespace: nexus-ENVIRONMENT
subjects:
- kind: ServiceAccount
  name: nexus-backend-sa
  namespace: nexus-ENVIRONMENT
roleRef:
  kind: Role
  name: nexus-backend-role
  apiGroup: rbac.authorization.k8s.io